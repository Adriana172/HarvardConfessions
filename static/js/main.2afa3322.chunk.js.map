{"version":3,"sources":["theme.js","components/Input/styles.js","components/Input/index.js","components/Select/styles.js","components/Select/index.js","components/Button/styles.js","components/Button/index.js","containers/Register/styles.js","config.js","containers/Register/index.js","containers/Login/styles.js","containers/Login/index.js","components/TextArea/styles.js","components/GifPicker/styles.js","components/GifPicker/index.js","components/TextArea/index.js","components/Posts/styles.js","components/Posts/index.js","containers/MyProfile/index.js","containers/OtherProfile/index.js","containers/Home/styles.js","containers/Home/index.js","App.js","index.js"],"names":["WebFont","load","google","families","theme","colors","devLogo","mainBackground","crimson","fonts","primary","family","weight","Inputtext","styled","input","_templateObject","_ref","Title","label","_templateObject2","_ref2","Input","props","react_default","a","createElement","className","for","name","title","Object","assign","id","type","inputType","value","onChange","handleChange","placeholder","Selectoptions","select","styles_templateObject","styles_templateObject2","Select","styles_Title","disabled","options","map","option","key","BasicButton","button","Button_styles_templateObject","Button","console","log","style","children","GlobalStyle","createGlobalStyle","Register_styles_templateObject","Header","h1","Register_styles_templateObject2","Header2","_templateObject3","config","graphqlUrl","process","REACT_APP_API_URL","ADD_USER","gql","Register_templateObject","houseOptions","Register","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","newUser","nickname","email","house","password","handleNickname","bind","assertThisInitialized","handleClearForm","handleInput","e","_this2","target","setState","prevState","objectSpread","_this3","_this4","_this5","defineProperty","preventDefault","onSubmit","handleFormSubmit","components_Input","components_Select","react_components_esm","mutation","variables","onCompleted","data","alert","error","message","addUser","Link","to","components_Button","onClick","action","Component","Login_styles_templateObject","Login_styles_templateObject2","styles_templateObject3","LOGIN_USER","Login_templateObject","Login","handleEmail","userData","fetch","method","body","JSON","stringify","headers","Accept","Content-Type","then","response","json","Fragment","styles_GlobalStyle","styles_Header","styles_Header2","loginUser","Longtext","div","TextArea_styles_templateObject","TextArea_styles_templateObject2","TextArea_styles_templateObject3","GifDesign","GifPicker_styles_templateObject","GifPicker","gif","src","downsized","url","func","styles_GifDesign","Picker_default","onSelected","GifPlayer","require","TextArea","text","addGif","TextArea_styles_Title","react_center_dist_default","contentEditable","components_GifPicker","Posts_styles_templateObject","Posttext","Posts_styles_templateObject2","Posts_styles_templateObject3","_templateObject4","_ref3","_ref4","_ref5","textarea","_templateObject5","_ref6","ADD_POST","Posts_templateObject","Posts","newPost","content","handleContent","Posts_styles_GlobalStyle","components_TextArea","addPost","GET_USER","MyProfile_templateObject","GET_POST","MyProfile_templateObject2","UserInfo","query","loading","concat","user","PostInfo","MyProfile","MyProfile_UserInfo","MyProfile_PostInfo","OtherProfile","Home_styles_templateObject","Home_styles_templateObject2","Home_styles_templateObject3","Home","Home_styles_GlobalStyle","Home_styles_Header","Home_styles_Header2","client","ApolloClient","uri","App","react_common_esm","BrowserRouter","styled_components_browser_esm","Switch","Route","exact","path","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"qQAEAA,EAAQC,KAAK,CACXC,OAAQ,CACNC,SAAU,CACR,sBACA,eACA,oBACA,QACA,iBAKN,IAceC,EAdD,CACZC,OAAQ,CACNC,QAAS,UACTC,eAAgB,OAChBC,QAAS,WAEXC,MAAO,CACLC,QAAS,CACPC,OAAQ,gCACRC,OAAQ,wYCrBP,IAAMC,EAAYC,UAAOC,MAAVC,IAQL,SAAAC,GAAA,OAAAA,EAAGb,MAAkBK,MAAMC,QAAQC,SAGvCO,EAAQJ,UAAOK,MAAVC,IACD,SAAAC,GAAA,OAAAA,EAAGjB,MAAkBK,MAAMC,QAAQC,SCWrCW,EAtBD,SAAAC,GACZ,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACR,EAAD,KACEM,EAAAC,EAAAC,cAAA,SAAOE,IAAKL,EAAMM,KAAMF,UAAU,cAC/BJ,EAAMO,QAGXN,EAAAC,EAAAC,cAACb,EAADkB,OAAAC,OAAA,CACEL,UAAU,eACVM,GAAIV,EAAMM,KACVA,KAAMN,EAAMM,KACZK,KAAMX,EAAMY,UACZC,MAAOb,EAAMa,MACbC,SAAUd,EAAMe,aAChBC,YAAahB,EAAMgB,aACfhB,wWCjBL,IAAMiB,EAAgB1B,UAAO2B,OAAVC,IAQT,SAAAzB,GAAA,OAAAA,EAAGb,MAAkBK,MAAMC,QAAQC,SAGvCO,EAAQJ,UAAOK,MAAVwB,IACD,SAAAtB,GAAA,OAAAA,EAAGjB,MAAkBK,MAAMC,QAAQC,SCkBrCiC,EA7BA,SAAArB,GACb,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACmB,EAAD,KACErB,EAAAC,EAAAC,cAAA,SAAOE,IAAKL,EAAMM,MAAlB,IAA0BN,EAAMO,MAAhC,MAEFN,EAAAC,EAAAC,cAACc,EAAD,CACEP,GAAIV,EAAMM,KACVA,KAAMN,EAAMM,KACZO,MAAOb,EAAMa,MACbC,SAAUd,EAAMe,aAChBX,UAAU,gBAEVH,EAAAC,EAAAC,cAAA,UAAQU,MAAM,GAAGU,UAAQ,GACtBvB,EAAMgB,aAERhB,EAAMwB,QAAQC,IAAI,SAAAC,GACjB,OACEzB,EAAAC,EAAAC,cAAA,UAAQwB,IAAKD,EAAQb,MAAOa,EAAQ9B,MAAO8B,GACxCA,KAbT,yNCPC,IAAME,EAAcrC,UAAOsC,OAAVC,IACb,SAAA9B,GAAK,OAAKA,EAAMb,QAAU,QAAU,WACzB,SAAAa,GAAK,OAAKA,EAAMb,QAAU,UAAY,SAC3C,SAAAO,GAAA,OAAAA,EAAGb,MAAkBK,MAAMC,QAAQC,SCGrC2C,EALA,SAAA/B,GAEb,OADAgC,QAAQC,IAAIjC,EAAMkC,OACXjC,EAAAC,EAAAC,cAACyB,EAAgB5B,EAAQA,EAAMmC,wXCFjC,IAAMC,EAAcC,4BAAHC,KAMXC,EAAShD,UAAOiD,GAAVC,IACF,SAAA/C,GAAA,OAAAA,EAAGb,MAAkBK,MAAMC,QAAQC,SAIvCsD,EAAUnD,UAAOiD,GAAVG,IACH,SAAA7C,GAAA,OAAAA,EAAGjB,MAAkBK,MAAMC,QAAQC,0CCfrCwD,EAAA,CACbC,WAAYC,iEAAYC,mBAAqB,oUCY/C,IAAMC,EAAWC,IAAHC,KAgBRC,EAAe,CAAC,OAAQ,eAAgB,OAAQ,cAqKvCC,cAlKb,SAAAA,EAAYpD,GAAO,IAAAqD,EAAA,OAAA7C,OAAA8C,EAAA,EAAA9C,CAAA+C,KAAAH,IACjBC,EAAA7C,OAAAgD,EAAA,EAAAhD,CAAA+C,KAAA/C,OAAAiD,EAAA,EAAAjD,CAAA4C,GAAAM,KAAAH,KAAMvD,KAED2D,MAAQ,CACXC,QAAS,CACPC,SAAU,GACVC,MAAO,GACPC,MAAO,GACPC,SAAU,KAIdX,EAAKY,eAAiBZ,EAAKY,eAAeC,KAApB1D,OAAA2D,EAAA,EAAA3D,CAAA6C,IACtBA,EAAKe,gBAAkBf,EAAKe,gBAAgBF,KAArB1D,OAAA2D,EAAA,EAAA3D,CAAA6C,IACvBA,EAAKgB,YAAchB,EAAKgB,YAAYH,KAAjB1D,OAAA2D,EAAA,EAAA3D,CAAA6C,IAdFA,8EAmBJiB,GAAG,IAAAC,EAAAhB,KACZ1C,EAAQyD,EAAEE,OAAO3D,MACrB0C,KAAKkB,SACH,SAAAC,GAAS,MAAK,CACZd,QAAQpD,OAAAmE,EAAA,EAAAnE,CAAA,GACHkE,EAAUd,QADR,CAELtD,KAAMO,MAGV,kBAAMmB,QAAQC,IAAIsC,EAAKZ,MAAMC,QAAQC,gDAI7BS,GAAG,IAAAM,EAAArB,KACT1C,EAAQyD,EAAEE,OAAO3D,MACrB0C,KAAKkB,SACH,SAAAC,GAAS,MAAK,CACZd,QAAQpD,OAAAmE,EAAA,EAAAnE,CAAA,GACHkE,EAAUd,QADR,CAELtD,KAAMO,MAGV,kBAAMmB,QAAQC,IAAI2C,EAAKjB,MAAMC,kDAIlBU,GAAG,IAAAO,EAAAtB,KACZ1C,EAAQyD,EAAEE,OAAO3D,MACrB0C,KAAKkB,SACH,SAAAC,GAAS,MAAK,CACZd,QAAQpD,OAAAmE,EAAA,EAAAnE,CAAA,GACHkE,EAAUd,QADR,CAELtD,KAAMO,MAGV,kBAAMmB,QAAQC,IAAI4C,EAAKlB,MAAMC,+CAIrBU,GAAG,IAAAQ,EAAAvB,KACT1C,EAAQyD,EAAEE,OAAO3D,MACjBP,EAAOgE,EAAEE,OAAOlE,KACpBiD,KAAKkB,SACH,SAAAC,GAAS,MAAK,CACZd,QAAQpD,OAAAmE,EAAA,EAAAnE,CAAA,GACHkE,EAAUd,QADRpD,OAAAuE,EAAA,EAAAvE,CAAA,GAEJF,EAAOO,MAGZ,kBAAMmB,QAAQC,IAAI6C,EAAKnB,MAAMC,mDAIjBU,GACdA,EAAEU,iBACFzB,KAAKkB,SAAS,CACZb,QAAS,CACPC,SAAU,GACVC,MAAO,GACPC,MAAO,GACPC,SAAU,uCAMd,OACE/D,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAkB6E,SAAU1B,KAAK2B,kBAE/CjF,EAAAC,EAAAC,cAACiC,EAAD,MACAnC,EAAAC,EAAAC,cAACoC,EAAD,4BACAtC,EAAAC,EAAAC,cAACuC,EAAD,oDACAzC,EAAAC,EAAAC,cAACgF,EAAD,CACEvE,UAAW,OACXL,MAAO,WACPD,KAAM,WACNO,MAAO0C,KAAKI,MAAMC,QAAQC,SAC1B7C,YAAa,gCACbD,aAAcwC,KAAKc,cAClB,IAEHpE,EAAAC,EAAAC,cAACgF,EAAD,CACEvE,UAAW,OACXL,MAAO,QACPD,KAAM,QACNO,MAAO0C,KAAKI,MAAMC,QAAQE,MAC1B9C,YAAa,2BACbD,aAAcwC,KAAKc,cAClB,IAEHpE,EAAAC,EAAAC,cAACiF,EAAD,CACE7E,MAAO,QACPD,KAAM,QACNkB,QAAS2B,EACTtC,MAAO0C,KAAKI,MAAMI,MAClB/C,YAAa,eACbD,aAAcwC,KAAKc,cAClB,IAEHpE,EAAAC,EAAAC,cAACgF,EAAD,CACEvE,UAAW,OACXL,MAAO,WACPD,KAAM,WACNO,MAAO0C,KAAKI,MAAMC,QAAQI,SAC1BhD,YAAa,sBACbD,aAAcwC,KAAKc,cAClB,IAEHpE,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CACEC,SAAUtC,EACVuC,UAAW,CAAE/F,MAAO+D,KAAKI,MAAMC,SAC/B4B,YAAa,SAAAC,GACNA,GACHC,MAAMD,EAAKE,MAAMC,WAIpB,SAACC,EAADnG,KAAY+F,KAAZ,OACCxF,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAMC,GAAG,cACP9F,EAAAC,EAAAC,cAAC6F,EAAD,CACE7G,SAAO,EACP8G,QAASjE,QAAQC,IAAI,eACrBiE,OAAQ,WACNL,MAJJ,aAaN5F,EAAAC,EAAAC,cAAC6F,EAAD,CAAQE,OAAQ3C,KAAKa,iBAArB,iBAxJe+B,0XC5BhB,IAAM/D,GAAcC,4BAAH+D,KAMX7D,GAAShD,UAAOiD,GAAV6D,IACF,SAAA3G,GAAA,OAAAA,EAAGb,MAAkBK,MAAMC,QAAQC,SAIvCsD,GAAUnD,UAAOiD,GAAV8D,IACH,SAAAxG,GAAA,OAAAA,EAAGjB,MAAkBK,MAAMC,QAAQC,gTCJpD,IAAMmH,GAAatD,IAAHuD,MAmJDC,eApIb,SAAAA,EAAYzG,GAAO,IAAAqD,EAAA,OAAA7C,OAAA8C,EAAA,EAAA9C,CAAA+C,KAAAkD,IACjBpD,EAAA7C,OAAAgD,EAAA,EAAAhD,CAAA+C,KAAA/C,OAAAiD,EAAA,EAAAjD,CAAAiG,GAAA/C,KAAAH,KAAMvD,KAED2D,MAAQ,CACXC,QAAS,CACPE,MAAO,GACPE,SAAU,KAIdX,EAAKqD,YAAcrD,EAAKqD,YAAYxC,KAAjB1D,OAAA2D,EAAA,EAAA3D,CAAA6C,IACnBA,EAAK6B,iBAAmB7B,EAAK6B,iBAAiBhB,KAAtB1D,OAAA2D,EAAA,EAAA3D,CAAA6C,IACxBA,EAAKgB,YAAchB,EAAKgB,YAAYH,KAAjB1D,OAAA2D,EAAA,EAAA3D,CAAA6C,IAZFA,2EAiBPiB,GAAG,IAAAC,EAAAhB,KACT1C,EAAQyD,EAAEE,OAAO3D,MACrB0C,KAAKkB,SACH,SAAAC,GAAS,MAAK,CACZd,QAAQpD,OAAAmE,EAAA,EAAAnE,CAAA,GACHkE,EAAUd,QADR,CAELtD,KAAMO,MAGV,kBAAMmB,QAAQC,IAAIsC,EAAKZ,MAAMC,QAAQE,gDAI1BQ,GAAG,IAAAM,EAAArB,KACZ1C,EAAQyD,EAAEE,OAAO3D,MACrB0C,KAAKkB,SACH,SAAAC,GAAS,MAAK,CACZd,QAAQpD,OAAAmE,EAAA,EAAAnE,CAAA,GACHkE,EAAUd,QADR,CAELtD,KAAMO,MAGV,kBAAMmB,QAAQC,IAAI2C,EAAKjB,MAAMC,+CAIrBU,GAAG,IAAAO,EAAAtB,KACT1C,EAAQyD,EAAEE,OAAO3D,MACjBP,EAAOgE,EAAEE,OAAOlE,KACpBiD,KAAKkB,SACH,SAAAC,GAAS,MAAK,CACZd,QAAQpD,OAAAmE,EAAA,EAAAnE,CAAA,GACHkE,EAAUd,QADRpD,OAAAuE,EAAA,EAAAvE,CAAA,GAEJF,EAAOO,MAGZ,kBAAMmB,QAAQC,IAAI4C,EAAKlB,MAAMC,oDAIhBU,GACfA,EAAEU,iBACF,IAAI2B,EAAWpD,KAAKI,MAAMC,QAE1BgD,MAAM,qBAAsB,CAC1BC,OAAQ,OACRC,KAAMC,KAAKC,UAAUL,GACrBM,QAAS,CACPC,OAAQ,mBACRC,eAAgB,sBAEjBC,KAAK,SAAAC,GACNA,EAASC,OAAOF,KAAK,SAAA3B,GACnBzD,QAAQC,IAAI,aAAewD,wCAM/B,OACExF,EAAAC,EAAAC,cAACF,EAAAC,EAAMqH,SAAP,KACEtH,EAAAC,EAAAC,cAACqH,GAAD,MACAvH,EAAAC,EAAAC,cAACsH,GAAD,4BACAxH,EAAAC,EAAAC,cAACuH,GAAD,oDAGAzH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAkB6E,SAAU1B,KAAK2B,kBAC/CjF,EAAAC,EAAAC,cAACgF,EAAD,CACEvE,UAAW,OACXL,MAAO,QACPD,KAAM,QACNO,MAAO0C,KAAKI,MAAMC,QAAQE,MAC1B9C,YAAa,mBACbD,aAAcwC,KAAKc,cAErBpE,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACgF,EAAD,CACEvE,UAAW,OACXL,MAAO,WACPD,KAAM,WACNO,MAAO0C,KAAKI,MAAMC,QAAQI,SAC1BhD,YAAa,sBACbD,aAAcwC,KAAKc,cAErBpE,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CACEC,SAAUiB,GACVhB,UAAW,CACTzB,MAAOP,KAAKI,MAAMC,QAAQE,MAC1BE,SAAUT,KAAKI,MAAMC,QAAQI,WAG9B,SAAC2D,EAADjI,KAAc+F,KAAd,OACCxF,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAMC,GAAG,aACP9F,EAAAC,EAAAC,cAAC6F,EAAD,CACE7G,SAAO,EACP8G,QAAS0B,EACTzB,OAAQ,WACNyB,MAJJ,sBAnHIxB,wmBCtBb,IAAMyB,GAAWrI,UAAOsI,IAAVC,KAaJ,SAAApI,GAAA,OAAAA,EAAGb,MAAkBK,MAAMC,QAAQC,SAIvCO,GAAQJ,UAAOK,MAAVmI,KACD,SAAAjI,GAAA,OAAAA,EAAGjB,MAAkBK,MAAMC,QAAQC,aAG3BG,UAAOsI,IAAVG,6ICtBf,IAAMC,GAAY1I,UAAOsI,IAAVK,MCiBPC,+KAdTC,GACF,IAAMC,EAAMD,EAAIE,UAAUC,IACbhF,KAAKvD,MAAMwI,KAAKH,oCAI7B,OACEpI,EAAAC,EAAAC,cAACsI,GAAD,KACExI,EAAAC,EAAAC,cAACuI,GAAAxI,EAAD,CAAQyI,WAAYpF,KAAKtB,IAAIiC,KAAKX,gBATlB4C,aCApByC,GAAYC,EAAQ,IA8CTC,eA3Cb,SAAAA,EAAY9I,GAAO,IAAAqD,EAAA,OAAA7C,OAAA8C,EAAA,EAAA9C,CAAA+C,KAAAuF,IACjBzF,EAAA7C,OAAAgD,EAAA,EAAAhD,CAAA+C,KAAA/C,OAAAiD,EAAA,EAAAjD,CAAAsI,GAAApF,KAAAH,KAAMvD,KAORe,aAAe,SAAAuD,GACbjB,EAAKoB,SAAS,CAAEsE,KAAMzE,EAAEE,OAAO3D,SATdwC,EAYnB2F,OAAS,SAAAZ,GACPpG,QAAQC,IAAI,MACZoB,EAAKoB,SAAS,CAAE2D,IAAKA,IACrBpG,QAAQC,IAAIoB,EAAKM,QAbjBN,EAAKM,MAAQ,CACXoF,KAAM,GACNX,IAAK,MAJU/E,wEAmBjB,OACEpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAC8I,GAAD,KACEhJ,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAAjB,sBAEFH,EAAAC,EAAAC,cAAC+I,GAAAhJ,EAAD,KACED,EAAAC,EAAAC,cAACyH,GAAD,CACEuB,iBAAe,EACf/I,UAAU,eACVS,MAAO0C,KAAKI,MAAMoF,KAClBjI,SAAUyC,KAAKxC,cAEdwC,KAAKI,MAAMyE,KAAOnI,EAAAC,EAAAC,cAACyI,GAAD,CAAWR,IAAK7E,KAAKI,MAAMyE,QAGlDnI,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC+I,GAAAhJ,EAAD,KACED,EAAAC,EAAAC,cAACiJ,GAAD,CAAWZ,KAAMjF,KAAKyF,kBArCT7C,u3BCHhB,IAAM/D,GAAcC,4BAAHgH,MAgBXC,IAVS/J,UAAOiD,GAAV+G,KACF,SAAA7J,GAAA,OAAAA,EAAGb,MAAkBK,MAAMC,QAAQC,SAI7BG,UAAOiD,GAAVgH,KACH,SAAA1J,GAAA,OAAAA,EAAGjB,MAAkBK,MAAMC,QAAQC,SAI5BG,UAAOsI,IAAV4B,KACV,SAAAC,GAAA,OAAAA,EAAG7K,MAAkBC,OAAOE,gBAEtB,SAAA2K,GAAA,OAAAA,EAAG9K,MAAkBK,MAAMC,QAAQC,QACnC,SAAAwK,GAAA,OAAAA,EAAG/K,MAAkBK,MAAMC,QAAQE,UAK5BE,UAAOsK,SAAVC,KAWJ,SAAAC,GAAA,OAAAA,EAAGlL,MAAkBK,MAAMC,QAAQC,gQC5BpD,IAAM4K,GAAW/G,IAAHgH,MA6FCC,eAhFb,SAAAA,EAAYlK,GAAO,IAAAqD,EAAA,OAAA7C,OAAA8C,EAAA,EAAA9C,CAAA+C,KAAA2G,IACjB7G,EAAA7C,OAAAgD,EAAA,EAAAhD,CAAA+C,KAAA/C,OAAAiD,EAAA,EAAAjD,CAAA0J,GAAAxG,KAAAH,KAAMvD,KACD2D,MAAQ,CACXwG,QAAS,CACPC,QAAS,KAIb/G,EAAKgH,cAAgBhH,EAAKgH,cAAcnG,KAAnB1D,OAAA2D,EAAA,EAAA3D,CAAA6C,IACrBA,EAAKgB,YAAchB,EAAKgB,YAAYH,KAAjB1D,OAAA2D,EAAA,EAAA3D,CAAA6C,IATFA,6EAcLiB,GAAG,IAAAC,EAAAhB,KACX1C,EAAQyD,EAAEE,OAAO3D,MACrB0C,KAAKkB,SACH,SAAAC,GAAS,MAAK,CACZyF,QAAQ3J,OAAAmE,EAAA,EAAAnE,CAAA,GACHkE,EAAUyF,QADR,CAEL7J,KAAMO,MAGV,kBAAMmB,QAAQC,IAAIsC,EAAKZ,MAAMwG,QAAQC,+CAI7B9F,GAAG,IAAAM,EAAArB,KACT1C,EAAQyD,EAAEE,OAAO3D,MACjBP,EAAOgE,EAAEE,OAAOlE,KACpBiD,KAAKkB,SACH,SAAAC,GAAS,MAAK,CACZyF,QAAQ3J,OAAAmE,EAAA,EAAAnE,CAAA,GACHkE,EAAUyF,QADR3J,OAAAuE,EAAA,EAAAvE,CAAA,GAEJF,EAAOO,MAGZ,kBAAMmB,QAAQC,IAAI2C,EAAKjB,MAAMwG,4CAK/B,OACElK,EAAAC,EAAAC,cAACF,EAAAC,EAAMqH,SAAP,KACEtH,EAAAC,EAAAC,cAACmK,GAAD,MACArK,EAAAC,EAAAC,cAACmJ,GAAD,+BACArJ,EAAAC,EAAAC,cAAA,QAAM8E,SAAU1B,KAAK2B,kBACnBjF,EAAAC,EAAAC,cAACoK,GAAD,KACEtK,EAAAC,EAAAC,cAACgF,EAAD,CACEvE,UAAW,OACXN,KAAM,UACNO,MAAO0C,KAAKI,MAAMwG,QAAQC,QAC1BrJ,aAAcwC,KAAKc,YACnBrD,YAAa,4BAGjBf,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CACEC,SAAU0E,GACVzE,UAAW,CAAE6E,QAAS7G,KAAKI,MAAMwG,SACjC3E,YAAa,SAAAC,GACNA,GACHC,MAAMD,EAAKE,MAAMC,WAIpB,SAAC4E,EAAD9K,KAAY+F,KAAZ,OACCxF,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAMC,GAAG,aACP9F,EAAAC,EAAAC,cAAC6F,EAAD,CAAQC,QAASuE,EAAStE,OAAQ,kBAAMsE,MAAxC,QAGAvK,EAAAC,EAAAC,cAAA,cAGM,aA1EFgG,4TCZpB,IAAMsE,GAAWxH,IAAHyH,MASRC,GAAW1H,IAAH2H,MASRC,GAAW,kBACf5K,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAOyF,MAAOL,GAAUlF,UAAW,CAAE7E,GAH5B,yCAIN,SAAAhB,GAA8B,IAA3BqL,EAA2BrL,EAA3BqL,QAASpF,EAAkBjG,EAAlBiG,MAAOF,EAAW/F,EAAX+F,KAClB,OAAIsF,EAAgB9K,EAAAC,EAAAC,cAAA,uBACpB6B,QAAQC,IAAI,QAAS0D,GACrB3D,QAAQC,IAAI,OAAQ8E,KAAKC,UAAUvB,IAEjCxF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wBAAA6K,OAAmBvF,EAAKwF,KAAKpH,WAC7B5D,EAAAC,EAAAC,cAAA,0BAAA6K,OAAqBvF,EAAKwF,KAAKlH,aAMnCmH,GAAW,kBACfjL,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAOyF,MAAOH,GAAUpF,UAAW,IAChC,SAAAzF,GAA8B,IAA3BiL,EAA2BjL,EAA3BiL,QAASpF,EAAkB7F,EAAlB6F,MAAOF,EAAW3F,EAAX2F,KAClB,OAAIsF,EAAgB9K,EAAAC,EAAAC,cAAA,uBACpB6B,QAAQC,IAAI,QAAS0D,GACrB3D,QAAQC,IAAI,OAAQ8E,KAAKC,UAAUvB,IAEjCxF,EAAAC,EAAAC,cAAA,mBAEEF,EAAAC,EAAAC,cAAA,cAAA6K,OAASvF,SAkBJ0F,oLATX,OACElL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiL,GAAD,MACAnL,EAAAC,EAAAC,cAACkL,GAAD,cALgBlF,aCrCTmF,oLAZX,OACErL,EAAAC,EAAAC,cAACF,EAAAC,EAAMqH,SAAP,KACEtH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,qCANmBgG,gYCNpB,IAAM/D,GAAcC,4BAAHkJ,MAOXhJ,GAAShD,UAAOiD,GAAVgJ,KACF,SAAA9L,GAAA,OAAAA,EAAGb,MAAkBK,MAAMC,QAAQC,SAIvCsD,GAAUnD,UAAOiD,GAAViJ,KACH,SAAA3L,GAAA,OAAAA,EAAGjB,MAAkBK,MAAMC,QAAQC,SCUrCsM,oLAlBX,OACEzL,EAAAC,EAAAC,cAACF,EAAAC,EAAMqH,SAAP,KACEtH,EAAAC,EAAAC,cAACwL,GAAD,MACA1L,EAAAC,EAAAC,cAACyL,GAAD,4BACA3L,EAAAC,EAAAC,cAAC0L,GAAD,oDACA5L,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAMC,GAAG,UACP9F,EAAAC,EAAAC,cAAC6F,EAAD,CAAQC,QAAS1C,KAAK2B,iBAAkB/F,SAAO,GAA/C,WAIFc,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAMC,GAAG,aACP9F,EAAAC,EAAAC,cAAC6F,EAAD,CAAQC,QAAS1C,KAAK2B,kBAAtB,oBAbSiB,aCSb2F,GAAS,IAAIC,IAAa,CAC9BC,IAAKpJ,EAAOC,aAyBCoJ,oLApBX,OACEhM,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CAAgBJ,OAAQA,IACtB7L,EAAAC,EAAAC,cAACgM,EAAA,EAAD,KACElM,EAAAC,EAAAC,cAACiM,EAAA,cAAD,CAAevN,MAAOA,GACpBoB,EAAAC,EAAAC,cAACkM,EAAA,EAAD,KACEpM,EAAAC,EAAAC,cAACmM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAWrJ,IACzCnD,EAAAC,EAAAC,cAACmM,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWhG,KAEhCxG,EAAAC,EAAAC,cAACmM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,aAAaC,UAAWtB,KAC1ClL,EAAAC,EAAAC,cAACmM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,gBAAgBC,UAAWnB,KAC7CrL,EAAAC,EAAAC,cAACmM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWf,KACjCzL,EAAAC,EAAAC,cAACmM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWvC,gBAblC/D,aCflBuG,IAASC,OAAO1M,EAAAC,EAAAC,cAACyM,GAAD,MAASC,SAASC,eAAe","file":"static/js/main.2afa3322.chunk.js","sourcesContent":["import WebFont from 'webfontloader'\n\nWebFont.load({\n  google: {\n    families: [\n      'Source Sans Pro:400',\n      'Indie Flower',\n      'Gloria Hallelujah',\n      'Kalam',\n      'sans-serif',\n    ],\n  },\n})\n\nconst theme = {\n  colors: {\n    devLogo: '#FC6264',\n    mainBackground: '#FFF',\n    crimson: '#A51C30',\n  },\n  fonts: {\n    primary: {\n      family: 'Gloria Hallelujah, sans-serif',\n      weight: 700,\n    },\n  },\n}\n\nexport default theme\n","import styled from 'styled-components'\n\nexport const Inputtext = styled.input`\n  padding: 0.5em;\n  margin: 1em;\n  color: black;\n  background: #c0c0c0;\n  border: black;\n  border-radius: 3px;\n  width: 40%;\n  font-family: ${({ theme }) => theme.fonts.primary.family};\n  font-size: 1em;\n`\nexport const Title = styled.label`\n  font-family: ${({ theme }) => theme.fonts.primary.family};\n  font-size: 1em;\n`\n","import React from 'react'\nimport { Inputtext, Title } from './styles'\n\nconst Input = props => {\n  return (\n    <div className=\"form-group\">\n      <Title>\n        <label for={props.name} className=\"form-label\">\n          {props.title}\n        </label>\n      </Title>\n      <Inputtext\n        className=\"form-control\"\n        id={props.name}\n        name={props.name}\n        type={props.inputType}\n        value={props.value}\n        onChange={props.handleChange}\n        placeholder={props.placeholder}\n        {...props}\n      />\n    </div>\n  )\n}\n\nexport default Input\n","import styled from 'styled-components'\n\nexport const Selectoptions = styled.select`\n  padding: 0.5em;\n  margin: 1em;\n  color: black;\n  background: #c0c0c0;\n  border: black;\n  border-radius: 3px;\n  width: 40%;\n  font-family: ${({ theme }) => theme.fonts.primary.family};\n  font-size: 1em;\n`\nexport const Title = styled.label`\n  font-family: ${({ theme }) => theme.fonts.primary.family};\n  font-size: 1em;\n`\n","import React from 'react'\nimport { Selectoptions, Title } from './styles'\n\nconst Select = props => {\n  return (\n    <div className=\"form-group\">\n      <Title>\n        <label for={props.name}> {props.title} </label>\n      </Title>\n      <Selectoptions\n        id={props.name}\n        name={props.name}\n        value={props.value}\n        onChange={props.handleChange}\n        className=\"form-control\"\n      >\n        <option value=\"\" disabled>\n          {props.placeholder}\n        </option>\n        {props.options.map(option => {\n          return (\n            <option key={option} value={option} label={option}>\n              {option}\n            </option>\n          )\n        })}\n        />\n      </Selectoptions>\n    </div>\n  )\n}\n\nexport default Select\n","import styled from 'styled-components'\n\nexport const BasicButton = styled.button`\n  color: ${props => (props.primary ? 'white' : '#a51c30')};\n  background-color: ${props => (props.primary ? '#a51c30' : 'white')};\n  font-family: ${({ theme }) => theme.fonts.primary.family};\n  font-size: 1.5em;\n  border-radius: 5px;\n  width: 55%;\n  height: 50px;\n`\n","import React from 'react'\nimport { BasicButton } from './styles'\n\nconst Button = props => {\n  console.log(props.style)\n  return <BasicButton {...props}>{props.children}</BasicButton>\n}\n\nexport default Button\n","import styled from 'styled-components'\nimport { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    background-color: #a51c30;\n    text-align: center;\n  }\n`\nexport const Header = styled.h1`\n  font-family: ${({ theme }) => theme.fonts.primary.family};\n  font-size: 5em;\n`\n\nexport const Header2 = styled.h1`\n  font-family: ${({ theme }) => theme.fonts.primary.family};\n  font-size: 3em;\n`\n","export default {\n  graphqlUrl: process.env.REACT_APP_API_URL || 'http://localhost:5000/graphql',\n}\n","import React, { Component } from 'react'\n\n/* Import Components */\n\nimport Input from '../../components/Input'\nimport Select from '../../components/Select'\nimport Button from '../../components/Button/'\nimport { GlobalStyle, Header, Header2 } from './styles'\nimport { Link } from 'react-router-dom'\nimport gql from 'graphql-tag'\nimport { Mutation, graphql } from 'react-apollo'\nimport config from '../../config.js'\n\nconst ADD_USER = gql`\n  mutation createUser($input: CreateUserInput!) {\n    createUser(input: $input) {\n      user {\n        id\n        nickname\n        email\n        house\n      }\n      error {\n        message\n      }\n    }\n  }\n`\n\nconst houseOptions = ['Yard', 'River Houses', 'Quad', 'Off Campus']\n\nclass Register extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      newUser: {\n        nickname: '',\n        email: '',\n        house: '',\n        password: '',\n      },\n    }\n\n    this.handleNickname = this.handleNickname.bind(this)\n    this.handleClearForm = this.handleClearForm.bind(this)\n    this.handleInput = this.handleInput.bind(this)\n  }\n\n  /* This lifecycle hook gets executed when the component mounts */\n\n  handleNickname(e) {\n    let value = e.target.value\n    this.setState(\n      prevState => ({\n        newUser: {\n          ...prevState.newUser,\n          name: value,\n        },\n      }),\n      () => console.log(this.state.newUser.nickname),\n    )\n  }\n\n  handleEmail(e) {\n    let value = e.target.value\n    this.setState(\n      prevState => ({\n        newUser: {\n          ...prevState.newUser,\n          name: value,\n        },\n      }),\n      () => console.log(this.state.newUser),\n    )\n  }\n\n  handlePassword(e) {\n    let value = e.target.value\n    this.setState(\n      prevState => ({\n        newUser: {\n          ...prevState.newUser,\n          name: value,\n        },\n      }),\n      () => console.log(this.state.newUser),\n    )\n  }\n\n  handleInput(e) {\n    let value = e.target.value\n    let name = e.target.name\n    this.setState(\n      prevState => ({\n        newUser: {\n          ...prevState.newUser,\n          [name]: value,\n        },\n      }),\n      () => console.log(this.state.newUser),\n    )\n  }\n\n  handleClearForm(e) {\n    e.preventDefault()\n    this.setState({\n      newUser: {\n        nickname: '',\n        email: '',\n        house: '',\n        password: '',\n      },\n    })\n  }\n\n  render() {\n    return (\n      <form className=\"container-fluid\" onSubmit={this.handleFormSubmit}>\n        {/* Insert nickname */}\n        <GlobalStyle />\n        <Header>CRIMSON CONFESSIONS</Header>\n        <Header2>Anonymously Share Your College Confessions </Header2>\n        <Input\n          inputType={'text'}\n          title={'Nickname'}\n          name={'nickname'}\n          value={this.state.newUser.nickname}\n          placeholder={'Enter your anonymous nickname'}\n          handleChange={this.handleInput}\n        />{' '}\n        {/* Insert email */}\n        <Input\n          inputType={'text'}\n          title={'Email'}\n          name={'email'}\n          value={this.state.newUser.email}\n          placeholder={'Enter your college email'}\n          handleChange={this.handleInput}\n        />{' '}\n        {/* Select House */}\n        <Select\n          title={'House'}\n          name={'house'}\n          options={houseOptions}\n          value={this.state.house}\n          placeholder={'Select House'}\n          handleChange={this.handleInput}\n        />{' '}\n        {/* Insert password */}\n        <Input\n          inputType={'text'}\n          title={'Password'}\n          name={'password'}\n          value={this.state.newUser.password}\n          placeholder={'Enter your password'}\n          handleChange={this.handleInput}\n        />{' '}\n        {/* Submit info */}\n        <Mutation\n          mutation={ADD_USER}\n          variables={{ input: this.state.newUser }}\n          onCompleted={data => {\n            if (!data) {\n              alert(data.error.message)\n            }\n          }}\n        >\n          {(addUser, { data }) => (\n            <Link to=\"/myprofile\">\n              <Button\n                primary\n                onClick={console.log('Registered!')}\n                action={() => {\n                  addUser()\n                }}\n              >\n                Submit\n              </Button>\n            </Link>\n          )}\n        </Mutation>\n        {/* Clear info */}\n        <Button action={this.handleClearForm}>Clear</Button>\n\n      </form>\n    )\n  }\n}\n\nconst buttonStyle = {\n  margin: '10px 10px 10px 10px',\n}\n\nexport default Register\n","import styled from 'styled-components'\nimport { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    background-color: #a51c30;\n    text-align: center;\n  }\n`\nexport const Header = styled.h1`\n  font-family: ${({ theme }) => theme.fonts.primary.family};\n  font-size: 5em;\n`\n\nexport const Header2 = styled.h1`\n  font-family: ${({ theme }) => theme.fonts.primary.family};\n  font-size: 3em;\n`\n","import React, { Component } from 'react'\n\n/* Import Components */\nimport { Link } from 'react-router-dom'\nimport Input from '../../components/Input'\nimport Button from '../../components/Button'\nimport { GlobalStyle, Header, Header2 } from './styles'\n\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\n\nconst LOGIN_USER = gql`\n  mutation loginUser($email: String!, $password: String!) {\n    loginUser(email: $email, password: $password) {\n      user {\n        id\n        nickname\n        email\n        house\n      }\n      token\n    }\n  }\n`\n\nclass Login extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      newUser: {\n        email: '',\n        password: '',\n      },\n    }\n\n    this.handleEmail = this.handleEmail.bind(this)\n    this.handleFormSubmit = this.handleFormSubmit.bind(this)\n    this.handleInput = this.handleInput.bind(this)\n  }\n\n  /* This lifecycle hook gets executed when the component mounts */\n\n  handleEmail(e) {\n    let value = e.target.value\n    this.setState(\n      prevState => ({\n        newUser: {\n          ...prevState.newUser,\n          name: value,\n        },\n      }),\n      () => console.log(this.state.newUser.email),\n    )\n  }\n\n  handlePassword(e) {\n    let value = e.target.value\n    this.setState(\n      prevState => ({\n        newUser: {\n          ...prevState.newUser,\n          name: value,\n        },\n      }),\n      () => console.log(this.state.newUser),\n    )\n  }\n\n  handleInput(e) {\n    let value = e.target.value\n    let name = e.target.name\n    this.setState(\n      prevState => ({\n        newUser: {\n          ...prevState.newUser,\n          [name]: value,\n        },\n      }),\n      () => console.log(this.state.newUser),\n    )\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault()\n    let userData = this.state.newUser\n\n    fetch('http://example.com', {\n      method: 'POST',\n      body: JSON.stringify(userData),\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    }).then(response => {\n      response.json().then(data => {\n        console.log('Successful' + data)\n      })\n    })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <GlobalStyle />\n        <Header>CRIMSON CONFESSIONS</Header>\n        <Header2>Anonymously Share Your College Confessions </Header2>\n\n        {/* Insert nickname */}\n        <br />\n        <form className=\"container-fluid\" onSubmit={this.handleFormSubmit}>\n          <Input\n            inputType={'text'}\n            title={'Email'}\n            name={'email'}\n            value={this.state.newUser.email}\n            placeholder={'Enter your email'}\n            handleChange={this.handleInput}\n          />\n          <br />\n          {/* Insert password */}\n          <Input\n            inputType={'text'}\n            title={'Password'}\n            name={'password'}\n            value={this.state.newUser.password}\n            placeholder={'Enter your password'}\n            handleChange={this.handleInput}\n          />\n          <br />\n          {/* Submit info */}\n          <Mutation\n            mutation={LOGIN_USER}\n            variables={{\n              email: this.state.newUser.email,\n              password: this.state.newUser.password,\n            }}\n          >\n            {(loginUser, { data }) => (\n              <Link to=\"/newsfeed\">\n                <Button\n                  primary\n                  onClick={loginUser}\n                  action={() => {\n                    loginUser()\n                  }}\n                >\n                  Submit\n                </Button>\n              </Link>\n            )}\n          </Mutation>\n        </form>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Login\n","import styled from 'styled-components'\nimport { Flex } from 'grid-styled'\n\nexport const Longtext = styled.div`\n  padding: 0.5em;\n  margin: 1em;\n  color: black;\n  background: #c0c0c0;\n  width: 700px;\n  height: 200px;\n  border: black;\n  border-radius: 3px;\n  align-content: center;\n  -webkit-appearance: textfield;\n  appearance: textfield;\n  word-wrap: break-word;\n  font-family: ${({ theme }) => theme.fonts.primary.family};\n  font-size: 1em;\n`\n\nexport const Title = styled.label`\n  font-family: ${({ theme }) => theme.fonts.primary.family};\n  font-size: 1em;\n`\nexport const GifDesign = styled.div`\n  align-content: center;\n`\n","import styled from 'styled-components'\n\nexport const GifDesign = styled.div`\n  align-items: center;\n`\n","import Picker from 'react-giphy-component'\nimport React, { Component, PropTypes } from 'react'\nimport { GifDesign } from './styles'\n\nclass GifPicker extends Component {\n  log(gif) {\n    const src = gif.downsized.url\n    const func = this.props.func(src)\n  }\n\n  render() {\n    return (\n      <GifDesign>\n        <Picker onSelected={this.log.bind(this)} />\n      </GifDesign>\n    )\n  }\n}\n\nexport default GifPicker\n","import React, { Component } from 'react'\nimport { Longtext, Title, GifDesign } from './styles'\nimport Center from 'react-center'\nimport GifPicker from '../GifPicker'\nvar GifPlayer = require('react-gif-player')\n\nclass TextArea extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      text: '',\n      gif: null,\n    }\n  }\n\n  handleChange = e => {\n    this.setState({ text: e.target.value })\n  }\n\n  addGif = gif => {\n    console.log('hi')\n    this.setState({ gif: gif })\n    console.log(this.state)\n  }\n\n  render() {\n    return (\n      <div className=\"form-group\">\n        <Title>\n          <label className=\"form-label\">Create Your Post!</label>\n        </Title>\n        <Center>\n          <Longtext\n            contentEditable\n            className=\"form-control\"\n            value={this.state.text}\n            onChange={this.handleChange}\n          >\n            {this.state.gif && <GifPlayer gif={this.state.gif} />}\n          </Longtext>\n        </Center>\n        <br />\n        <Center>\n          <GifPicker func={this.addGif} />\n        </Center>\n      </div>\n    )\n  }\n}\n\nexport default TextArea\n","import styled from 'styled-components'\nimport { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    background-color: #a51c30;\n    text-align: center;\n  }\n`\nexport const Header = styled.h1`\n  font-family: ${({ theme }) => theme.fonts.primary.family};\n  font-size: 5em;\n`\n\nexport const Header2 = styled.h1`\n  font-family: ${({ theme }) => theme.fonts.primary.family};\n  font-size: 3em;\n`\n\nexport const Posttext = styled.div`\n  color: ${({ theme }) => theme.colors.mainBackground};\n  font-size: 2em;\n  font-family: ${({ theme }) => theme.fonts.primary.family};\n  font-weight: ${({ theme }) => theme.fonts.primary.weight};\n  color: black;\n  text-align: center;\n`\n\nexport const Longtext = styled.textarea`\n  padding: 0.5em;\n  margin: 1em;\n  color: black;\n  background: #c0c0c0;\n  width: 600px;\n  height: 150px;\n  border: black;\n  border-radius: 3px;\n  text-align: center;\n  word-wrap: break-word;\n  font-family: ${({ theme }) => theme.fonts.primary.family};\n  font-size: 1em;\n`\n","import React, { Component } from 'react'\nimport TextArea from '../../components/TextArea'\nimport { Container, Text, Posttext } from './styles'\nimport { GlobalStyle, Header, Header2 } from './styles'\n\nimport gql from 'graphql-tag'\nimport { Mutation, graphql } from 'react-apollo'\nimport Input from '../Input'\nimport Button from '../Button/'\nimport { Link } from 'react-router-dom'\n\nconst ADD_POST = gql`\n  mutation createPost($content: String!) {\n    createPost(content: $content) {\n      post {\n        content\n      }\n      error {\n        message\n      }\n    }\n  }\n`\nclass Posts extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      newPost: {\n        content: '',\n      },\n    }\n\n    this.handleContent = this.handleContent.bind(this)\n    this.handleInput = this.handleInput.bind(this)\n  }\n\n  /* This lifecycle hook gets executed when the component mounts */\n\n  handleContent(e) {\n    let value = e.target.value\n    this.setState(\n      prevState => ({\n        newPost: {\n          ...prevState.newPost,\n          name: value,\n        },\n      }),\n      () => console.log(this.state.newPost.content),\n    )\n  }\n\n  handleInput(e) {\n    let value = e.target.value\n    let name = e.target.name\n    this.setState(\n      prevState => ({\n        newPost: {\n          ...prevState.newPost,\n          [name]: value,\n        },\n      }),\n      () => console.log(this.state.newPost),\n    )\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <GlobalStyle />\n        <Posttext>Write your post below!</Posttext>\n        <form onSubmit={this.handleFormSubmit}>\n          <TextArea>\n            <Input\n              inputType={'text'}\n              name={'content'}\n              value={this.state.newPost.content}\n              handleChange={this.handleInput}\n              placeholder={'Write your post below!'}\n            />\n          </TextArea>\n          <Mutation\n            mutation={ADD_POST}\n            variables={{ content: this.state.newPost }}\n            onCompleted={data => {\n              if (!data) {\n                alert(data.error.message)\n              }\n            }}\n          >\n            {(addPost, { data }) => (\n              <Link to=\"/newsfeed\">\n                <Button onClick={addPost} action={() => addPost()}>\n                  Post\n                </Button>\n                <br />\n              </Link>\n            )}\n          </Mutation>{' '}\n        </form>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Posts\n","import React, { Component } from 'react'\n\n/* Import Components */\n\nimport Input from '../../components/Input'\nimport Select from '../../components/Select'\nimport Button from '../../components/Button'\nimport Posts from '../../components/Posts'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\n\nconst GET_USER = gql`\n  query user($id: ID!) {\n    user(id: $id) {\n      nickname\n      email\n      house\n    }\n  }\n`\nconst GET_POST = gql`\n  query posts {\n    content\n    userId\n    gif\n  }\n`\nconst id = 'a738f5b3-ebbb-4bcf-93fd-ae6ae320d02e'\n\nconst UserInfo = () => (\n  <Query query={GET_USER} variables={{ id: id }}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading</div>\n      console.log('ERROR', error)\n      console.log('DATA', JSON.stringify(data))\n      return (\n        <div>\n          <h1>{`User name: ${data.user.nickname}`}</h1>\n          <h1>{`User school: ${data.user.house}`}</h1>\n        </div>\n      )\n    }}\n  </Query>\n)\nconst PostInfo = () => (\n  <Query query={GET_POST} variables={{}}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading</div>\n      console.log('ERROR', error)\n      console.log('DATA', JSON.stringify(data))\n      return (\n        <div>\n          Posts\n          <h1>{` ${data}`}</h1>\n        </div>\n      )\n    }}\n  </Query>\n)\n\nclass MyProfile extends Component {\n  render() {\n    return (\n      <div>\n        <UserInfo />\n        <PostInfo />\n      </div>\n    )\n  }\n}\n\nexport default MyProfile\n","import React, { Component } from 'react'\n\n/* Import Components */\n\nimport Input from '../../components/Input'\nimport Select from '../../components/Select'\nimport Button from '../../components/Button'\nimport Posts from '../../components/Posts'\n\nclass OtherProfile extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <div>Nickname</div>\n        <div>House</div>\n        <div># of followers</div>\n\n        {/* Display Posts Query */}\n      </React.Fragment>\n    )\n  }\n}\n\nexport default OtherProfile\n","import styled from 'styled-components'\nimport { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    background-color: #a51c30;\n    text-align: center;\n  }\n`\n\nexport const Header = styled.h1`\n  font-family: ${({ theme }) => theme.fonts.primary.family};\n  font-size: 5em;\n`\n\nexport const Header2 = styled.h1`\n  font-family: ${({ theme }) => theme.fonts.primary.family};\n  font-size: 3em;\n`\n","import React, { Component } from 'react'\nimport Button from '../../components/Button'\nimport { GlobalStyle, Header, Header2, buttonStyle } from './styles'\nimport theme from '../../theme'\nimport { Link } from 'react-router-dom'\n\nclass Home extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <GlobalStyle />\n        <Header>CRIMSON CONFESSIONS</Header>\n        <Header2>Anonymously Share Your College Confessions </Header2>\n        <Link to=\"/login\">\n          <Button onClick={this.handleFormSubmit} primary>\n            Log In\n          </Button>\n        </Link>\n        <Link to=\"/register\">\n          <Button onClick={this.handleFormSubmit}>Sign Up</Button>\n        </Link>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Home\n","import ApolloClient from 'apollo-boost'\nimport React, { Component } from 'react'\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom'\nimport { ThemeProvider } from 'styled-components'\nimport theme from './theme'\nimport Register from './containers/Register'\nimport Login from './containers/Login'\nimport { ApolloProvider } from 'react-apollo'\n//import Newsfeed from './containers/Newsfeed'\nimport MyProfile from './containers/MyProfile'\nimport OtherProfile from './containers/OtherProfile'\nimport Home from './containers/Home'\nimport Posts from './components/Posts'\nimport config from './config'\n\nconst client = new ApolloClient({\n  uri: config.graphqlUrl,\n})\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <Router>\n          <ThemeProvider theme={theme}>\n            <Switch>\n              <Route exact path=\"/register\" component={Register} />\n              <Route path=\"/login\" component={Login} />\n              {/* <Route path=\"/newsfeed\" component={Newsfeed} /> */}\n              <Route exact path=\"/myprofile\" component={MyProfile} />\n              <Route exact path=\"/otherprofile\" component={OtherProfile} />\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/posts\" component={Posts} />\n            </Switch>\n          </ThemeProvider>\n        </Router>\n      </ApolloProvider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}